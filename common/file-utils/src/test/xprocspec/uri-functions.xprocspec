<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.daisy.org/ns/xprocspec"
               xmlns:xs="http://www.w3.org/2001/XMLSchema"
               xmlns:p="http://www.w3.org/ns/xproc"
               xmlns:px="http://www.daisy.org/ns/pipeline/xproc"
               xmlns:pxi="http://www.daisy.org/ns/pipeline/xproc/internal"
               xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
               xmlns:pf="http://www.daisy.org/ns/pipeline/functions">
	
	<x:script>
		<p:declare-step version="1.0" type="pxi:test" name="main">
			<p:input port="source" sequence="true"/>
			<p:output port="result" sequence="true">
				<p:pipe step="xslt" port="secondary"/>
			</p:output>
			<p:import href="../../main/resources/xml/xproc/library.xpl"/>
			<p:split-sequence test="position()=1"/>
			<px:set-base-uri>
				<p:with-option name="base-uri" select="resolve-uri('foo-3.xml',base-uri(/*))">
					<p:inline>
						<this/>
					</p:inline>
				</p:with-option>
			</px:set-base-uri>
			<p:identity name="set-base-uri"/>
			<p:identity>
				<p:input port="source">
					<p:pipe step="main" port="source"/>
					<p:pipe step="set-base-uri" port="result"/>
				</p:input>
			</p:identity>
			<p:xslt name="xslt">
				<p:input port="stylesheet">
					<p:inline>
						<xsl:stylesheet version="2.0">
							<xsl:import href="../../main/resources/xml/xslt/library.xsl"/>
							<xsl:param name="test-base-uri"/>
							<xsl:template match="/">
								<xsl:variable name="doc" xml:base="foo-4.xml">
									<foo>
										<bar>
											<quux/>
										</bar>
									</foo>
								</xsl:variable>
								<xsl:for-each select="collection(),root($doc)">
									<xsl:result-document href="#{position()}">
										<_>
											<test expression="   document-uri(.)"       value="{pf:relativize-uri(    document-uri(.)       )}"/>
											<test expression="pf:document-uri(.)"       value="{pf:relativize-uri( pf:document-uri(.)       )}"/>
											<test expression="   document-uri(/*)"      value="{pf:relativize-uri(    document-uri(/*)      )}"/>
											<test expression="pf:document-uri(/*)"      value="{pf:relativize-uri( pf:document-uri(/*)      )}"/>
											<test expression="   document-uri(/*/*[1])" value="{pf:relativize-uri(    document-uri(/*/*[1]) )}"/>
											<test expression="pf:document-uri(/*/*[1])" value="{pf:relativize-uri( pf:document-uri(/*/*[1]) )}"/>
											<test expression="   base-uri(.)"           value="{pf:relativize-uri(    base-uri(.)           )}"/>
											<test expression="pf:base-uri(.)"           value="{pf:relativize-uri( pf:base-uri(.)           )}"/>
											<test expression="   base-uri(/*)"          value="{pf:relativize-uri(    base-uri(/*)          )}"/>
											<test expression="pf:base-uri(/*)"          value="{pf:relativize-uri( pf:base-uri(/*)          )}"/>
											<test expression="   base-uri(/*/*[1])"     value="{pf:relativize-uri(    base-uri(/*/*[1])     )}"/>
											<test expression="pf:base-uri(/*/*[1])"     value="{pf:relativize-uri( pf:base-uri(/*/*[1])     )}"/>
											<test expression="   base-uri((/*/*)[1])"   value="{pf:relativize-uri(    base-uri((/*/*)[1])   )}"/>
											<test expression="pf:base-uri((/*/*)[1])"   value="{pf:relativize-uri( pf:base-uri((/*/*)[1])   )}"/>
											<test expression="   base-uri((//*)[1])"    value="{pf:relativize-uri(    base-uri((//*)[1])    )}"/>
											<test expression="pf:base-uri((//*)[1])"    value="{pf:relativize-uri( pf:base-uri((//*)[1])    )}"/>
											<xsl:apply-templates select="foo"/>
											<xsl:apply-templates select="//bar"/>
										</_>
									</xsl:result-document>
								</xsl:for-each>
							</xsl:template>
							<xsl:template match="/foo/bar">
								<xsl:copy>
									<test expression="   base-uri(root())" value="{pf:relativize-uri(    base-uri(root()) )}"/>
									<test expression="pf:base-uri(root())" value="{pf:relativize-uri( pf:base-uri(root()) )}"/>
									<test expression="   base-uri(.)"      value="{pf:relativize-uri(    base-uri(.)      )}"/>
									<test expression="pf:base-uri(.)"      value="{pf:relativize-uri( pf:base-uri(.)      )}"/>
									<xsl:apply-templates select="@*|node()"/>
								</xsl:copy>
							</xsl:template>
							<xsl:template match="@*|node()">
								<xsl:copy>
									<xsl:apply-templates select="@*|node()"/>
								</xsl:copy>
							</xsl:template>
							<xsl:function name="pf:relativize-uri" as="xs:string">
								<xsl:param name="uri" as="xs:string?"/>
								<xsl:sequence select="pf:relativize-uri($uri,$test-base-uri)"/>
							</xsl:function>
						</xsl:stylesheet>
					</p:inline>
				</p:input>
				<p:with-param port="parameters" name="test-base-uri" select="base-uri(/*)">
					<p:inline>
						<this/>
					</p:inline>
				</p:with-param>
			</p:xslt>
			<p:sink/>
		</p:declare-step>
	</x:script>
	
	<x:scenario label="test">
		<x:call step="pxi:test">
			<x:input port="source">
				<x:document type="inline" xml:base="foo-1.xml">
					<foo>
						<bar>
							<quux/>
						</bar>
					</foo>
				</x:document>
				<x:document type="file" href="foo-2.xml"/>
			</x:input>
		</x:call>
		<x:context label="the result">
			<x:document type="port" port="result"/>
		</x:context>
		<x:expect label="the result" type="compare">
			<!--
			    ==========================
			    foo-1.xml: inline document
			    ==========================
			    * document-uri() on an element does not work
			-->
			<x:document type="inline">
				<_>
					<test expression="   document-uri(.)"       value="foo-1.xml"/>
					<test expression="pf:document-uri(.)"       value="foo-1.xml"/>
					<test expression="   document-uri(/*)"      value=""/>
					<test expression="pf:document-uri(/*)"      value="foo-1.xml"/>
					<test expression="   document-uri(/*/*[1])" value=""/>
					<test expression="pf:document-uri(/*/*[1])" value="foo-1.xml"/>
					<test expression="   base-uri(.)"           value="foo-1.xml"/>
					<test expression="pf:base-uri(.)"           value="foo-1.xml"/>
					<test expression="   base-uri(/*)"          value="foo-1.xml"/>
					<test expression="pf:base-uri(/*)"          value="foo-1.xml"/>
					<test expression="   base-uri(/*/*[1])"     value="foo-1.xml"/>
					<test expression="pf:base-uri(/*/*[1])"     value="foo-1.xml"/>
					<test expression="   base-uri((/*/*)[1])"   value="foo-1.xml"/>
					<test expression="pf:base-uri((/*/*)[1])"   value="foo-1.xml"/>
					<test expression="   base-uri((//*)[1])"    value="foo-1.xml"/>
					<test expression="pf:base-uri((//*)[1])"    value="foo-1.xml"/>
					<foo>
						<bar>
							<test expression="   base-uri(root())" value="foo-1.xml"/>
							<test expression="pf:base-uri(root())" value="foo-1.xml"/>
							<test expression="   base-uri(.)"      value="foo-1.xml"/>
							<test expression="pf:base-uri(.)"      value="foo-1.xml"/>
							<quux/>
						</bar>
					</foo>
					<bar>
						<test expression="   base-uri(root())" value="foo-1.xml"/>
						<test expression="pf:base-uri(root())" value="foo-1.xml"/>
						<test expression="   base-uri(.)"      value="foo-1.xml"/>
						<test expression="pf:base-uri(.)"      value="foo-1.xml"/>
						<quux/>
					</bar>
				</_>
			</x:document>
			<!--
			    ================================
			    foo-2.xml: file loaded from disk
			    ================================
			    * document-uri() on an element does not work
			-->
			<x:document type="inline">
				<_>
					<test expression="   document-uri(.)"       value="foo-2.xml"/>
					<test expression="pf:document-uri(.)"       value="foo-2.xml"/>
					<test expression="   document-uri(/*)"      value=""/>
					<test expression="pf:document-uri(/*)"      value="foo-2.xml"/>
					<test expression="   document-uri(/*/*[1])" value=""/>
					<test expression="pf:document-uri(/*/*[1])" value="foo-2.xml"/>
					<test expression="   base-uri(.)"           value="foo-2.xml"/>
					<test expression="pf:base-uri(.)"           value="foo-2.xml"/>
					<test expression="   base-uri(/*)"          value="foo-2.xml"/>
					<test expression="pf:base-uri(/*)"          value="foo-2.xml"/>
					<test expression="   base-uri(/*/*[1])"     value="foo-2.xml"/>
					<test expression="pf:base-uri(/*/*[1])"     value="foo-2.xml"/>
					<test expression="   base-uri((/*/*)[1])"   value="foo-2.xml"/>
					<test expression="pf:base-uri((/*/*)[1])"   value="foo-2.xml"/>
					<test expression="   base-uri((//*)[1])"    value="foo-2.xml"/>
					<test expression="pf:base-uri((//*)[1])"    value="foo-2.xml"/>
					<foo>
						<bar>
							<test expression="   base-uri(root())" value="foo-2.xml"/>
							<test expression="pf:base-uri(root())" value="foo-2.xml"/>
							<test expression="   base-uri(.)"      value="foo-2.xml"/>
							<test expression="pf:base-uri(.)"      value="foo-2.xml"/>
							<quux/>
						</bar>
					</foo>
					<bar>
						<test expression="   base-uri(root())" value="foo-2.xml"/>
						<test expression="pf:base-uri(root())" value="foo-2.xml"/>
						<test expression="   base-uri(.)"      value="foo-2.xml"/>
						<test expression="pf:base-uri(.)"      value="foo-2.xml"/>
						<quux/>
					</bar>
				</_>
			</x:document>
			<!--
			    ===========================================
			    foo-3.xml: base URI set with p:set-base-uri
			    ===========================================
			    * document-uri() on an element does not work
			-->
			<x:document type="inline">
				<_>
					<test expression="   document-uri(.)"       value="foo-3.xml"/>
					<test expression="pf:document-uri(.)"       value="foo-3.xml"/>
					<test expression="   document-uri(/*)"      value=""/>
					<test expression="pf:document-uri(/*)"      value="foo-3.xml"/>
					<test expression="   document-uri(/*/*[1])" value=""/>
					<test expression="pf:document-uri(/*/*[1])" value="foo-3.xml"/>
					<test expression="   base-uri(.)"           value="foo-3.xml"/>
					<test expression="pf:base-uri(.)"           value="foo-3.xml"/>
					<test expression="   base-uri(/*)"          value="foo-3.xml"/>
					<test expression="pf:base-uri(/*)"          value="foo-3.xml"/>
					<test expression="   base-uri(/*/*[1])"     value="foo-3.xml"/>
					<test expression="pf:base-uri(/*/*[1])"     value="foo-3.xml"/>
					<test expression="   base-uri((/*/*)[1])"   value="foo-3.xml"/>
					<test expression="pf:base-uri((/*/*)[1])"   value="foo-3.xml"/>
					<test expression="   base-uri((//*)[1])"    value="foo-3.xml"/>
					<test expression="pf:base-uri((//*)[1])"    value="foo-3.xml"/>
					<foo>
						<bar>
							<test expression="   base-uri(root())" value="foo-3.xml"/>
							<test expression="pf:base-uri(root())" value="foo-3.xml"/>
							<test expression="   base-uri(.)"      value="foo-3.xml"/>
							<test expression="pf:base-uri(.)"      value="foo-3.xml"/>
							<quux/>
						</bar>
					</foo>
					<bar>
						<test expression="   base-uri(root())" value="foo-3.xml"/>
						<test expression="pf:base-uri(root())" value="foo-3.xml"/>
						<test expression="   base-uri(.)"      value="foo-3.xml"/>
						<test expression="pf:base-uri(.)"      value="foo-3.xml"/>
						<quux/>
					</bar>
				</_>
			</x:document>
			<!--
			    ===========================================
			    foo-4.xml: document from within XSLT itself
			    ===========================================
			    * document-uri() does not work, also not on a document node
			    * pf:* functions do not work
			-->
			<x:document type="inline">
				<_>
					<test expression="   document-uri(.)"       value=""/>
					<test expression="pf:document-uri(.)"       value=""/>
					<test expression="   document-uri(/*)"      value=""/>
					<test expression="pf:document-uri(/*)"      value=""/>
					<test expression="   document-uri(/*/*[1])" value=""/>
					<test expression="pf:document-uri(/*/*[1])" value=""/>
					<test expression="   base-uri(.)"           value="foo-4.xml"/>
					<test expression="pf:base-uri(.)"           value=""/>
					<test expression="   base-uri(/*)"          value="foo-4.xml"/>
					<test expression="pf:base-uri(/*)"          value=""/>
					<test expression="   base-uri(/*/*[1])"     value="foo-4.xml"/>
					<test expression="pf:base-uri(/*/*[1])"     value=""/>
					<test expression="   base-uri((/*/*)[1])"   value="foo-4.xml"/>
					<test expression="pf:base-uri((/*/*)[1])"   value=""/>
					<test expression="   base-uri((//*)[1])"    value="foo-4.xml"/>
					<test expression="pf:base-uri((//*)[1])"    value=""/>
					<foo>
						<bar>
							<test expression="   base-uri(root())" value="foo-4.xml"/>
							<test expression="pf:base-uri(root())" value=""/>
							<test expression="   base-uri(.)"      value="foo-4.xml"/>
							<test expression="pf:base-uri(.)"      value=""/>
							<quux/>
						</bar>
					</foo>
					<bar>
						<test expression="   base-uri(root())" value="foo-4.xml"/>
						<test expression="pf:base-uri(root())" value=""/>
						<test expression="   base-uri(.)"      value="foo-4.xml"/>
						<test expression="pf:base-uri(.)"      value=""/>
						<quux/>
					</bar>
				</_>
			</x:document>
		</x:expect>
	</x:scenario>
	
</x:description>
