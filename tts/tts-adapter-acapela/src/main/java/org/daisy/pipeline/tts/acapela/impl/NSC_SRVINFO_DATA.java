package org.daisy.pipeline.tts.acapela.impl;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : nscube_forjna.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NSC_SRVINFO_DATA extends Structure {
	public int nServerType;
	public int nServerStatus;
	public int nServerVersion;
	public int nMaxNbVoice;
	public int nAuthRateCtrl;
	public int nAutMaxNbChannel;
	public int nAuthMaxRTRate;
	public int nCurRTRate;
	public int nCurNbChannel;
	public NSC_SRVINFO_DATA() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("nServerType", "nServerStatus", "nServerVersion", "nMaxNbVoice", "nAuthRateCtrl", "nAutMaxNbChannel", "nAuthMaxRTRate", "nCurRTRate", "nCurNbChannel");
	}
	public NSC_SRVINFO_DATA(int nServerType, int nServerStatus, int nServerVersion, int nMaxNbVoice, int nAuthRateCtrl, int nAutMaxNbChannel, int nAuthMaxRTRate, int nCurRTRate, int nCurNbChannel) {
		super();
		this.nServerType = nServerType;
		this.nServerStatus = nServerStatus;
		this.nServerVersion = nServerVersion;
		this.nMaxNbVoice = nMaxNbVoice;
		this.nAuthRateCtrl = nAuthRateCtrl;
		this.nAutMaxNbChannel = nAutMaxNbChannel;
		this.nAuthMaxRTRate = nAuthMaxRTRate;
		this.nCurRTRate = nCurRTRate;
		this.nCurNbChannel = nCurNbChannel;
	}
	public NSC_SRVINFO_DATA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends NSC_SRVINFO_DATA implements Structure.ByReference {
		
	};
	public static class ByValue extends NSC_SRVINFO_DATA implements Structure.ByValue {
		
	};
}
